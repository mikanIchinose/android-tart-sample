/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.github.mikan.tart.core.network.model

import io.github.mikan.tart.core.network.model.Group
import io.github.mikan.tart.core.network.model.ItemTag
import io.github.mikan.tart.core.network.model.ItemTeamMembership
import io.github.mikan.tart.core.network.model.User

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param renderedBody HTML形式の本文
 * @param body Markdown形式の本文
 * @param coediting この記事が共同更新状態かどうか (Qiita Teamでのみ有効)
 * @param commentsCount この記事へのコメントの数
 * @param createdAt データが作成された日時
 * @param id 記事の一意なID
 * @param likesCount この記事への「いいね」の数（Qiitaでのみ有効）
 * @param `private` 限定共有状態かどうかを表すフラグ (Qiita Teamでは無効)
 * @param reactionsCount 絵文字リアクションの数（Qiita Teamでのみ有効）
 * @param stocksCount この記事がストックされた数
 * @param tags 記事に付いたタグ一覧
 * @param title 記事のタイトル
 * @param updatedAt データが最後に更新された日時
 * @param url 記事のURL
 * @param user 
 * @param pageViewsCount 閲覧数
 * @param slide スライドモードが有効を表すフラグ
 * @param organizationUrlName 記事のOrganization の url_name を表します。
 * @param group 
 * @param teamMembership 
 */


data class Item (

    /* HTML形式の本文 */
    @Json(name = "rendered_body")
    val renderedBody: kotlin.String,

    /* Markdown形式の本文 */
    @Json(name = "body")
    val body: kotlin.String,

    /* この記事が共同更新状態かどうか (Qiita Teamでのみ有効) */
    @Json(name = "coediting")
    val coediting: kotlin.Boolean,

    /* この記事へのコメントの数 */
    @Json(name = "comments_count")
    val commentsCount: kotlin.Int,

    /* データが作成された日時 */
    @Json(name = "created_at")
    val createdAt: kotlin.String,

    /* 記事の一意なID */
    @Json(name = "id")
    val id: kotlin.String,

    /* この記事への「いいね」の数（Qiitaでのみ有効） */
    @Json(name = "likes_count")
    val likesCount: kotlin.Int,

    /* 限定共有状態かどうかを表すフラグ (Qiita Teamでは無効) */
    @Json(name = "private")
    val `private`: kotlin.Boolean,

    /* 絵文字リアクションの数（Qiita Teamでのみ有効） */
    @Json(name = "reactions_count")
    val reactionsCount: kotlin.Int,

    /* この記事がストックされた数 */
    @Json(name = "stocks_count")
    val stocksCount: kotlin.Int,

    /* 記事に付いたタグ一覧 */
    @Json(name = "tags")
    val tags: kotlin.collections.List<ItemTag>,

    /* 記事のタイトル */
    @Json(name = "title")
    val title: kotlin.String,

    /* データが最後に更新された日時 */
    @Json(name = "updated_at")
    val updatedAt: kotlin.String,

    /* 記事のURL */
    @Json(name = "url")
    val url: kotlin.String,

    @Json(name = "user")
    val user: User,

    /* 閲覧数 */
    @Json(name = "page_views_count")
    val pageViewsCount: kotlin.Int?,

    /* スライドモードが有効を表すフラグ */
    @Json(name = "slide")
    val slide: kotlin.Boolean,

    /* 記事のOrganization の url_name を表します。 */
    @Json(name = "organization_url_name")
    val organizationUrlName: kotlin.String?,

    @Json(name = "group")
    val group: Group? = null,

    @Json(name = "team_membership")
    val teamMembership: ItemTeamMembership? = null

) {


}

